<HTML><HEAD><TITLE>Element Naming</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Element Naming</H3><P>Each storage and stream is identified by a name, which can be up to 31 characters long. The sole exception is a root storage associated with a disk file, which can have a name as long as the file system allows and must obey any file-system restrictions on the name. Otherwise, all other element names can contain any characters above value 32 except <I>.</I>, <I>\</I>, <I>/</I>, <I>:</I>, and <I>!</I>.</P>
<P>Prefix characters below 32 have a special meaning at the beginning of the name of any element. All of these values mark an element as being owned and managed by some agent other than the owner of the particular storage element in question:</P>
<UL><LI>\000, \001, and \002 specify an OLE-managed element. OLE has special uses for each of these values, as we'll see in later chapters.</LI><LI>\003 marks an element as owned by the code that manages the parent storage of that element. This is useful when a client is handing out <I>IS</I><I>torage </I>pointers to other components so that those components can store their data inside the client's storage hierarchy. A client can save extra information for each instance of a component within such a storage by using the \003 prefix.</LI><LI>\004 is for the exclusive use of the Structured Storage implementation (and not by any other part of OLE). Such elements are useful if the implementation, for example, supports interfaces (besides <I>IStorage</I>) that require persistent data.</LI><LI>\005 through \01F are reserved for OLE and the operating system.</LI></UL><P>Whatever code owns the storage in which elements appear with these prefixed names must generally leave that information alone. One exception to this is the permanent conversion of OLE 1 embedded compound document objects to be compatible with the current OLE, as described in the OLE1.WRI file on the sample CD.</P>
<P>The actual names of elements in a storage hierarchy are generally not intended to be shown directly to an end user and therefore don't need to be localized. When such an arrangement becomes necessary in a future release of Windows, there will be a standard place to store a localized name.</P></font></body></HTML>
