<HTML><HEAD><TITLE>Parsing a Display Name</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Parsing a Display Name</H3><P>The other action a client can take is to parse a display name into a moniker, either to simply test whether the moniker is valid or to actually go all the way and bind the moniker. LinkUser does the latter in <I>CApp::ParseAndBind </I>in response to the Link/Parse Display Name And Bind menu item:</P>
<P><BR></P>
<pre><code>void CApp::ParseAndBind(void)<BR>    {<BR>    HRESULT         hr;<BR>    IBindCtx       *pbc;<BR>    IMoniker       *pmk;<BR>    int             i;<BR>    TCHAR           szName[512];<BR>    ULONG           chEaten=0;<BR><BR>    i=(int)SendMessage(m_hWndList, LB_GETCURSEL, 0, 0L);<BR><BR>    if (LB_ERR==i)<BR>        return;<BR><BR>    SendMessage(m_hWndList, LB_GETTEXT, i, (LPARAM)(LPTSTR)szName);<BR><BR>    if (FAILED(CreateBindCtx(0, &amp;pbc)))<BR>        [Error message and return]<BR><BR>    hr=MkParseDisplayName(pbc, szName, &amp;chEaten, &amp;pmk);<BR><BR>    if (SUCCEEDED(hr))<BR>        {<BR>        MessageBox(m_hWnd, TEXT("Name parsed. Press OK to bind.")<BR>            , TEXT("Link User"), MB_OK);<BR><BR>        BindAndShow(pmk, pbc);<BR>        pmk-&gt;Release();<BR>        }<BR>    else<BR>        {<BR>        //Tell user how far parsing got.<BR>        wsprintf(szName, TEXT("Parsing failed after %lu characters.")<BR>            , chEaten);<BR><BR>        MessageBox(m_hWnd, szName, TEXT("Link User"), MB_OK);<BR>        }<BR><BR>    pbc-&gt;Release();<BR>    return;<BR>    }</code></pre>
<P>Just as with binding, <I>MkParseDisplayName </I>encapsulates all the magic for us. Because this API function takes a bind context and because the parsing process will contain registered bound objects after parsing is complete, we can use this same bind context to bind the moniker and show its description, thereby making the extra binding step more efficient. In other words, the server that did the parsing will still be running until we release the bind context, so subsequent binding with that same context is more efficient.</P>
<P>The <I>pchEaten </I>argument that comes back from<I> MkParseDisplayName </I>is important because it would allow a client to display where the parsing encountered an error. We'll see specific use of this value in Chapter 20, when we look at the Links dialog box standard for linked objects in OLE Documents.</P></font></body></HTML>
