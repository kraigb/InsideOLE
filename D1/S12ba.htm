<HTML><HEAD><TITLE>Why Use an In-Process Server?</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Why Use an In-Process Server?</H3><P>An in-process server provides all the benefits that an in-process handler provides except that loading time is generally a little slower because the DLL is larger. Nonetheless, you still gain all the performance benefits of a handler. You can also license an in-process server DLL for distribution if you see fit, using simple registry entries or other licensing information to limit its functionality and to display advertising as desired.</P>
<P>The primary benefit of an in-process server is that all the speed and portability of a handler and all the editing capabilities of a local server are stored inside a single disk entity—true one-stop shopping for an embedded object. Accordingly, in-process servers are a great choice for OLE Controls as well as for other objects that provide a dialog box–type user interface that then appears to be a native part of the container application. The version of Polyline that we create in this chapter will have just such a user interface.</P></font></body></HTML>
