<HTML><HEAD><TITLE>The ITypeLib Interface</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>The <I>ITypeLib </I>Interface</H3><P>The member functions of the <I>ITypeLib</I> interface, as described in Table 3-8, are oriented primarily toward retrieving library attributes or retrieving information and <I>ITypeInfo</I> pointers for the elements within the library.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="109pt" VALIGN="TOP"><COL WIDTH="221pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Member Function</B></P></TD><TD VALIGN="TOP"><P><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP"><P>GetLibAttr</P></TD><TD VALIGN="TOP"><P>Allocates, fills, and returns a pointer to the library's TLIBATTR structure. This must be freed with <I>ReleaseLibAttr</I>.</P></TD></TR><TR><TD VALIGN="TOP"><P>ReleaseLibAttr</P></TD><TD VALIGN="TOP"><P>Frees the TLIBATTR structure allocated in <I>GetLibAttr</I>.</P></TD></TR><TR><TD VALIGN="TOP"><P>GetTypeInfo</P></TD><TD VALIGN="TOP"><P>Returns the <I>ITypeInfo</I> pointer for a top-level element in the library given a zero-based index. You would use <I>GetTypeInfo</I> to iterate through all the elements in the library.</P></TD></TR><TR><TD VALIGN="TOP"><P>GetTypeInfoCount</P></TD><TD VALIGN="TOP"><P>Returns the number of top-level elements in the type library.</P></TD></TR><TR><TD VALIGN="TOP"><P>GetTypeInfoType</P></TD><TD VALIGN="TOP"><P>Returns the TYPEKIND of an element in the library given its index. This is the information you might use in creating an organized tree list of type library contents.</P></TD></TR><TR><TD VALIGN="TOP"><P>GetTypeInfoOfGuid</P></TD><TD VALIGN="TOP"><P>Returns the <I>ITypeInfo</I> pointer for an element in the type library given the GUID of that element. The GUID must match a <I>uuid</I> attribute for some element, be it for a <I>typedef</I>, <I>dispinterface</I>, <I>interface coclass</I>, or whatever.</P></TD></TR><TR><TD VALIGN="TOP"><P>GetDocumentation</P></TD><TD VALIGN="TOP"><P>Given an index, allocates and returns a BSTR with the library name (which follows the <I>library</I> keyword in the ODL file) and allocates and returns BSTR copies of the <I>helpstring</I>, <I>helpfile</I>, and <I>helpcontext</I> attributes of the library. The caller must free the BSTRs with <I>SysFreeString</I>.</P></TD></TR><TR><TD VALIGN="TOP"><P>FindName</P></TD><TD VALIGN="TOP"><P>Returns the <I>ITypeInfo</I> pointers (and member IDs) for any number of elements given the element names.</P></TD></TR><TR><TD VALIGN="TOP"><P>IsName</P></TD><TD VALIGN="TOP"><P>Checks quickly whether the given names exist in the type library. <I>IsName</I> is suitable for verifying existence before calling a more expensive function such as <I>FindName</I>.</P></TD></TR><TR><TD VALIGN="TOP"><P>GetTypeComp</P></TD><TD VALIGN="TOP"><P>Returns an <I>ITypeComp</I> interface for the library. See "The <I>ITypeComp</I> Interface" on page 183.</P></TD></TR></TBODY></TABLE>
<P><BR></P><P><B>Table 3-8.</B></P>
<P><B>Member functions of the <I>ITypeLib</I> interface.</B></P>
<P>All of these functions basically give you access to the various parts of a type library that you would describe in an ODL file or create otherwise. The relationships between these member functions and a sample ODL file are shown in Figure 3-4.</P>
<P><img src="test.gif"></P>
<P><B>Figure 3-4.</B></P>
<P><B>How <I>ITypeLib</I> members relate to ODL entries.</B></P></font></body></HTML>
