<HTML><HEAD><TITLE>Version Numbers, Conversion, and Emulation</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Version Numbers, Conversion, and Emulation</H3><P>If you ever plan to release a new version of your application, which more or less all of us do, you will want to use version numbers with all instances of data that might be stored persistently, such as a content object's native data streams. A later version of your server might be asked to load and edit an old version of a content object through conversion and emulation if your object is registered for such use.</P>
<P>In designing a server, you should think about what other data formats your server might support besides its own. This includes not only old versions of your application but also your competitors' similar applications.1 You'll need to decide which formats you want to read but write back in your own format. These are the types you can convert. Then you'll need to find the formats that you can both read and write, the types you can emulate. Your object's implementation of <I>IPersistStorage </I>is responsible for handling the differences among whatever storage formats you support. If you're dealing with competitive sources, you'll have to obtain information about their data formats. The nice thing is that those competitors will want your formats as well, and it is a benefit to all users that your servers are cross-compatible.</P></font></body></HTML>
