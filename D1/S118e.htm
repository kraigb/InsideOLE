<HTML><HEAD><TITLE>Structured Storage Features</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Structured Storage Features</H2><P>The design of Structured Storage provides for a number of significant features not expressly described in the <I>IStorage </I>and <I>IStream </I>interfaces:</P>
<UL><LI>Access modes. Elements can be opened in a variety of ways, including the usual read/write permissions and sharing exclusions. In addition, elements can be opened as transacted or direct and can be manipulated in a few other ways as well.</LI><LI>Shareable elements. Storages and streams are shareable across process boundaries.</LI><LI>Element naming. Storages and streams can have names up to 31 characters long.</LI><LI>Incremental access. Modifications to any element do not require a complete rewrite of a file, and elements can be read as little as necessary.</LI></UL><P>Again, this technology is not a rigid requirement for doing any other work with OLE, but these features, which are described in more detail in the following sections, can greatly simplify how an application or a component manages its storage. Incremental access, for example, comes almost for free, and a "revert to saved" feature is easily provided with transactioning.</P></font></body></HTML>
