<HTML><HEAD><TITLE>(Full Servers) Add OLE 2 Clipboard Formats</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>(Full Servers) Add OLE 2 Clipboard Formats</H3><P>If you have read through Chapter 17, you already know that a container can create an object if it is pasted from the clipboard or through a drag-and-drop operation using the <I>OleCreateFromData</I> function. (If you didn't know this, now you do.) For this to happen, something has to put the embedded object data on the clipboard in the first place. This is the responsibility of a server application, regardless of whether it's running to service an embedded object or running stand-alone.</P>
<P>Embedded object data is made of two formats: CFSTR_EMBEDSOURCE and CFSTR_OBJECTDESCRIPTOR.4 From Cosmo, we need to</P>
<P>provide these formats in the data object we place on the clipboard whenever we perform a Copy or a Cut. A miniserver might not have any clipboard user interface, which is why such a feature is generally only for full servers.</P>
<P>In Cosmo, this means modifying <I>CCosmoDoc::TransferObjectCreate</I>, which is used in calling <I>OleSetClipboard</I>, in a drag-and-drop operation and, as we saw in this chapter, in <I>IOleObject::GetClipboardData</I>. Creating the two formats we're adding here is accomplished in <I>CCosmoDoc::RenderMedium</I>, which uses helper functions in the INOLE.DLL library (for example, <I>INOLE</I><I>_</I><I>CreateStorageOnHGlobal </I>and <I>INOLE</I><I>_</I><I>AllocObjectDescriptor</I>) to create the necessary formats. These formats should be placed in the data object after your private data but before any presentations.</P>
<P></P>

<TABLE COLS="1" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="432pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B></B></P></TD></TR><TR><TD VALIGN="TOP"><P>4 When you pass <I>OleSetClipboard</I> a data object that contains CF_EMBEDSOURCE, OLE will create the OLE 1 formats "Native" and "OwnerLink" and place those on the clipboard as well. This allows OLE 1 containers to also paste in your object, a fact of which you remain blissfully ignorant.</P></TD></TR></TBODY></TABLE>
<P><BR></P></font></body></HTML>
