<HTML><HEAD><TITLE>Chapter Organization</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Chapter Organization</H3><P>I have attempted, probably imperfectly, to organize the chapters in this book, with the exception of some of the very early ones, in such a way that if you're reading only to gain an architectural understanding of OLE, you need read only the first third to half of each chapter. Those pages will generally describe the technology under discussion and will explain the mechanisms involved in making that technology work. These pages will not get into details about writing code. Instead, all coding details are left to the later parts of a chapter, so they remain out of your way if you want to learn only the mechanics. If you are a programmer reading this book, you might find it more helpful to read a mechanism section at the beginning of a chapter and then skip to the corresponding implementation section.</P>
<P>No matter how you decide to read this book, or what your purposes are in reading it, you will probably benefit by using the index and the table of contents. From the latter, you can see the structure of each chapter at a glance, which is especially useful for seeing the correlation between the mechanism and the implementation sections of each. I have strived to keep tidbits of architectural knowledge out of the code-oriented sections, but I suspect that things will creep in. If you want to be sure you don't miss anything, read through the mechanisms of all the chapters, and then return to each chapter and scan the programming sections. For readers who also have the first edition of this book, you'll notice that some chapters of this book, such as "Persistent Objects and Viewable Objects," were topics buried in the tail ends of the first edition's chapters, such as "Structured Storage" and "Uniform Data Transfer." The separation of this information into different chapters is done mostly in an attempt to make the chapter organization consistent.</P>
<P>Each chapter (with the exception of this one and the last chapter) also ends with a summary of the major points of the chapter that you should understand before moving on. As the various OLE technologies build on one another, so does your understanding of OLE, so it is important to be sure that you're building a mental foundation as we explore technological ones.</P></font></body></HTML>
