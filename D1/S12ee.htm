<HTML><HEAD><TITLE>How In-Place Activation Works</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>How In-Place Activation Works</H2><P>In-place activation uses a series of well-defined protocols through which the container and the object communicate. OLE itself does hardly anything except route some messages to the proper windows. So in-place activation depends almost entirely on a container and an object communicating with each other through the OLE-defined interfaces <I>IOleInPlaceFrame</I>,<I> IOleInPlaceUIWindow</I>,<I> IOleInPlaceSite</I>,<I> IOleInPlaceObject</I>,<I> </I>and <I>IOleInPlaceActiveObject.</I></P>
<P>In this section, we'll first see where these interfaces are placed and then take a quick look at the member functions they contain. We'll also see how they are used by following an entire in-place–activation session.</P></font></body></HTML>
