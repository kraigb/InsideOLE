<HTML><HEAD><TITLE>Creating a Property Frame</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Creating a Property Frame</H3><P>When a client or an object is ready to display a property sheet, it calls the function <I>OleCreatePropertyFrame</I>, which takes a large number of arguments:</P>
<P><BR></P>
<pre><code>STDAPI OleCreatePropertyFrame(HWND hWndOwner, UINT x, UINT y<BR>    , LPCOLESTR lpszCaption, ULONG cObjects, IUnknown **lplpUnk<BR>    , ULONG cPages, CLSID *lpPages, LCID lcid<BR>    , DWORD dwReserved, LPVOID pvReserved);</code></pre>
<P>Alternatively, the caller can put these arguments and an extra dispID into an OCPFIPARAMS structure and call <I>OleCreatePropertyFrameIndirect</I>:</P>
<P><BR></P>
<pre><code>typedef struct tagOCPFIPARAMS<BR>    {<BR>    ULONG      cbStructSize;<BR>    HWND       hWndOwner;<BR>    int        x;<BR>    int        y;<BR>    LPCOLESTR  lpszCaption;<BR>    ULONG      cObjects;<BR>    IUnknown **lplpUnk;<BR>    ULONG      cPages;<BR>    CLSID     *lpPages;<BR>    LCID       lcid;<BR>    DISPID     dispidInitialProperty;<BR>    } OCPFIPARAMS;<BR><BR>STDAPI OleCreatePropertyFrameIndirect(LPOCPFIPARAMS pParams);</code></pre>
<P>The common arguments and fields work as follows:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="119pt" VALIGN="TOP"><COL WIDTH="221pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Argument/Field</B></P></TD><TD VALIGN="TOP"><P><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP"><P>hWndOwner</P></TD><TD VALIGN="TOP"><P>The parent window of the modal dialog.</P></TD></TR><TR><TD VALIGN="TOP"><P>x, y</P></TD><TD VALIGN="TOP"><P>The position of the dialog in relation to <I>hWndOwner</I>.</P></TD></TR><TR><TD VALIGN="TOP"><P>lpszCaption</P></TD><TD VALIGN="TOP"><P>The caption to show in the dialog.</P></TD></TR><TR><TD VALIGN="TOP"><P>cObjects, lplpUnk</P></TD><TD VALIGN="TOP"><P>The array of objects affected by this property sheet; <I>lplpUnk</I> points to the array, and <I>cObjects</I> specifies the size of the array.</P></TD></TR><TR><TD VALIGN="TOP"><P>cPages, lpPages</P></TD><TD VALIGN="TOP"><P>The array of CLSIDs specifying which pages to display; <I>lpPages</I> points to the array of CLSIDs, and <I>cPages</I> specifies the size of the array.</P></TD></TR><TR><TD VALIGN="TOP"><P>lcid</P></TD><TD VALIGN="TOP"><P>The locale specifying the national language that should be shown.</P></TD></TR><TR><TD VALIGN="TOP"><P>dispIDInitialProperty</P></TD><TD VALIGN="TOP"><P>The property that gets the initial focus in per-property browsing. (See "Per-Property Browsing" later in this chapter.) Clients can pass such a dispID only through <I>OleCreatePropertyFrameIndirect</I>, as <I>dwReserved</I> must be 0 in <I>OleCreatePropertyFrame</I>. Specifying DISPID_UNKNOWN in this field results in behavior identical to that of <I>OleCreatePropertyFrame</I>, so the first control on the first page receives the initial focus.</P></TD></TR></TBODY></TABLE>
<P><BR></P><P>Both the <I>OleCreatePropertyFrame</I> and <I>OleCreatePropertyFrameIndirect </I>functions create a modal dialog and attempt to instantiate and initialize each property page using the CLSIDs in <I>lpPages. </I>From that point, the dialog communicates with the pages, telling them when to show or hide themselves and when to apply changes to the affected objects. Because a modal dialog is involved, neither API function returns until the user closes the dialog box. The HRESULT return value may contain any error code, including those prefixed with CTL_E_ to specify problems with the arguments or structure fields.</P></font></body></HTML>
