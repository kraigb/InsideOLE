<HTML><HEAD><TITLE>Call CoUninitialize or OleUninitialize</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Call <I>CoUninitialize</I> or <I>OleUninitialize</I></H3><P>After an application has finished with the COM/OLE DLLs, it must call <I>CoUninitialize</I> if it previously called <I>CoInitialize</I> or <I>OleUninitialize</I> if it previ-ously called <I>OleInitiali</I><I>ze</I>. Neither function takes any arguments. You must uninitialize only if initialization worked, to ensure that everything is balanced inside the DLLs. The uninitialize functions check that all pending OLE calls across process boundaries have cleared, ensuring that the states of all components are cleaned up completely before a task terminates. One part of the process is a call to <I>CoFreeAllLibraries</I>,<I> </I>which checks that any DLL servers for components loaded into this task are properly unloaded. We'll see the effect of this unloading process in Chapter 5.</P></font></body></HTML>
