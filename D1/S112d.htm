<HTML><HEAD><TITLE>Summary</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H2>Summary</H2><P>Many technological devices are often very hard to understand and use without a description of that device and its uses—an owner's manual. For an object or component, <I>type information</I> is the owner's manual, in which is described an object's CLSID, its interfaces, their IIDs, their member functions, and the return value and arguments of those functions. This is combined with brief help information, references to a complete help file, and even exported functions from DLLs. In short, type information is the combination of a header file, a help file, and an import library.</P>
<P>A <I>type library</I> is a collection of type information elements for one or more objects and one or more interfaces as well as a repository for type definitions and module export lists. The elements in a type library, including the library itself, can be given a wide range of attributes to describe their characteristics as can even the individual member functions of interfaces. A library is also assigned a locale identifier describing the national language in which the library is written.</P>
<P>Type libraries are created through a standard OLE service involving the interfaces <I>ICreateTypeLib </I>and <I>ICreateTypeInfo</I>. The tool MKTYPLIB.EXE works in conjunction with the Object Description Language (ODL) to automate the process of library creation, allowing the developer to define interfaces and classes in a C++ style notation. Once the library is created, clients and components access type information through another standard OLE service involving several API functions and the interfaces <I>ITypeLib </I>and <I>ITypeInfo</I>, which provide structured access to the information. The interface <I>ITypeComp</I> provides high-speed unstructured access for the purposes of compilers.</P>
<P>OLE defines specific registry entries to associate a type library with an object's CLSID, providing a way for clients to read up on an object before ever instantiating it. When an object already exists, the interface <I>IProvideClassInfo</I> allows the client to ask an object for its type information directly.</P></font></body></HTML>
