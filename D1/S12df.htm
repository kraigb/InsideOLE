<HTML><HEAD><TITLE>Call IRunningObjectTable::NoteChangeTime</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF">
<font face="verdana,arial,helvetica" size="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Call <I>IRunningObjectTable::NoteChangeTime</I></H3><P>Whenever you make a change to Cosmo's Polyline figure, it calls <I>CPolylineAdviseS</I><I>ink::OnDataChange </I>in DOCUMENT.CPP. This sets the dirty flag in the document by calling <I>CCosmoDoc::FDirtySet</I>, which in turn calls <I>CFigure::SendAdvise(OBJECTCODE</I><I>_</I><I>DATACHANGED).</I> We send <I>IAdviseSink::OnDataChange </I>notifications as necessary, but we also call <I>IRunningObjectTable::NoteChangeTime</I>:</P>
<P><BR></P>
<pre><code>case OBJECTCODE_DATACHANGED:<BR>    if (NULL!=m_pIDataAdviseHolder)<BR>        {<BR>        m_pIDataAdviseHolder-&gt;SendOnDataChange<BR>            (m_pImpIDataObject, 0, 0);<BR>        }<BR><BR>    if (0!=m_dwRegROT)<BR>        INOLE_NoteChangeTime(m_dwRegROT, NULL, NULL);<BR><BR>    break;</code></pre>
<P>The helper function <I>INOLE</I><I>_</I><I>NoteChangeTime </I>takes the registration key from <I>IRunningObjectTable::Register </I>and calls the running object table for us. Its other two arguments are a FILETIME structure and a filename. If we pass NULL for the FILETIME, <I>INOLE</I><I>_</I><I>NoteChangeTime</I> will use the current time or try to obtain it from the filename:</P>
<P><BR></P>
<pre><code>STDAPI_(void) INOLE_NoteChangeTime(DWORD dwReg, FILETIME *pft<BR>    , LPTSTR pszFile)<BR>    {<BR>    IRunningObjectTable    *pROT;<BR>    FILETIME                ft;<BR><BR>    if (NULL==pft)<BR>        {<BR>        CoFileTimeNow(&amp;ft);<BR>        pft=&amp;ft;<BR>        }<BR><BR>    if (NULL!=pszFile)<BR>        GetFileTimes(pszFile, pft);<BR><BR>    if (FAILED(GetRunningObjectTable(0, &amp;pROT)))<BR>        return;<BR><BR>    pROT-&gt;NoteChangeTime(dwReg, pft);<BR>    pROT-&gt;Release();<BR>    return;<BR>    }</code></pre>
<P>Using the current time is good enough for Cosmo.</P></font></body></HTML>
